# Example_Configuration.sim
# mmCEsim Simulation Example
# Author: Wuqiong Zhao
# Date: 2022-09-20

version: 0.1.0 # the targeted mmCEsim version
meta: # document meta data
  title: mmCEsim Simulation Example
  description:
    This is a basic millimeter wave channel estimation simulation example with mmCEsim.
    The involved algorithms are `OMP' and `Oracle LS'.
    There are 4 jobs in total, with SNR and pilot overhead as variables and NMSE as metric.
    The PFD report is auto generated via `simreport.cls'
    and a corresponding plain text report is also available.
  author: Wuqiong Zhao
  email: contact@mmcesim.org
  website: https://mmcesim.org
  license: MIT
  date: "2022-09-18"
  comments: This is an uplink channel.
physics:
  frequency: narrow # assume narrow band
  off_grid: false # do not consider off-grid problem
nodes:
  - id: BS # this should be unique
    role: receiver
    num: 1 # this is the default value
    size: [16, 1] # UPA with size 8x4
    beam: [4, 1]
    grid: same # the same as physics size
    beamforming:
      variable: "W"
      scheme: random
  - id: UE # user
    role: transmitter
    num: 1 # a single-user model
    size: 8 # ULA with size 8
    beam: 2
    grid: 8
    beamforming:
      variable: "F"
      scheme: random
channels:
  - id: H
    from: BS
    to: UE # 'from -> to' specifies the channel direction
    sparsity: 6
    gains:
      mode: normal
      mean: 0
      variance: 1
sounding:
  variables:
    received: "y" # received signal vector
    noise: "noise" # received noise vector
    channel: "H_cascaded" # the cascaded channel (actually the same as 'H' for simple MIMO)
preamble: |
  COMMENT Here starts the preamble.
estimation: |
  VNt::m = NEW `DICTIONARY.T`
  VNr::m = NEW `DICTIONARY.R`
  lambda_hat = INIT `GRID.*`
  Q = INIT `MEASUREMENT` `GRID.*`
  i::u0 = LOOP 0 `PILOT`/`BEAM.T`
    F_t::m = NEW F_{:,:,i}
    W_t::m = NEW W_{:,:,i}
    Q_{i*`BEAM.*`:(i+1)*`BEAM.*`-1,:} = \kron(F_t^T, W_t^H) @ \kron(VNt^*, VNr) # the sensing matrix
  END
  none_zero::u1 = NEW \find(\abs(VNr^H@H_cascaded@VNt)>0.1)
  # PRINT \size(none_zero,0) '\n' # make sure the number of non-zero elements
  BRANCH
  lambda_hat = ESTIMATE Q y none_zero
  RECOVER $VNr @ \reshape(lambda_hat, `GRID.R`, `GRID.T`) @ VNt^H$
  MERGE
conclusion: |
  PRINT "">>\t"" `JOB_CNT` '\n'
simulation:
  backend: cpp # cpp (default) | matlab | octave | py
  metric: [NMSE] # used for compare
  jobs:
    - name: "NMSE v.s. SNR (Pilot: 32)"
      test_num: 100
      SNR: [-10:2:20]
      SNR_mode: dB # dB (default) | linear
      pilot: 32
      # pilot_mode: percent # num (default) | percent
      algorithms: # compare different languages
        - alg: OMP
          max_iter: 6
          label: OMP # used in report
          estimated_channel: H_hat_OMP # variable name for the estimated channel
        - alg: Oracle_LS
          label: Oracle LS
    - name: NMSE v.s. Pilot (-10 dB)
      test_num: 200
      SNR: -10
      pilot: [8:8:128]
      algorithms: # compare different languages
        - alg: OMP
          max_iter: 6
          label: "OMP (Iter: 6)"
        - alg: OMP
          max_iter: 9
          label: "OMP (Iter: 9)"
        - alg: OMP
          max_iter: 12
          label: "OMP (Iter: 12)"
        - alg: Oracle_LS
          label: Oracle LS # used in report
    - name: NMSE v.s. Pilot (0 dB)
      test_num: 200
      SNR: 0
      pilot: [8:8:128]
      algorithms: # compare different languages
        - alg: OMP
          max_iter: 6
          label: "OMP (Iter: 6)"
        - alg: OMP
          max_iter: 9
          label: "OMP (Iter: 9)"
        - alg: OMP
          max_iter: 12
          label: "OMP (Iter: 12)"
        - alg: Oracle_LS
          label: Oracle LS # used in report
    - name: NMSE v.s. Pilot (10 dB)
      test_num: 200
      SNR: 10
      pilot: [8:8:128]
      algorithms: # compare different languages
        - alg: OMP
          max_iter: 6
          label: "OMP (Iter: 6)"
        - alg: OMP
          max_iter: 9
          label: "OMP (Iter: 9)"
        - alg: OMP
          max_iter: 12
          label: "OMP (Iter: 12)"
        - alg: Oracle_LS
          label: Oracle LS # used in report
  report:
    name: mmCEsim_Example_Report
    format: [pdf, latex] # both compiled PDF and tex files
    plot: true # plot data
    table: false # do not print table
    latex:
      command: xelatex # command to compile the report
      UTF8: false # no need for UTF8 support with this setting
