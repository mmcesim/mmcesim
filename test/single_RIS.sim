# single_RIS.sim
# Single RIS Channel Estimation Test
# Author: Wuqiong Zhao
# Date: 2024-01-14

version: 0.3.0
meta:
  title: Single RIS Channel Estimation Test
  author: Wuqiong Zhao
physics:
  frequency: narrow
  off_grid: true
nodes:
  - id: BS
    role: receiver
    size: [16, 4]
    beam: [4, 2]
    grid: same
    beamforming:
      variable: "W" # combining
  - id: UE
    role: transmitter
    size: 4
    beam: 2
    grid: same
    beamforming:
      variable: "F" # precoding
      scheme: custom # This can be omitted if the formula is specified.
      formula: |
        # Available temporary variables will include SIZE, BEAM, GRID, etc.
        # And the size of W (type 't', i.e. 'c3') is SIZE * BEAM * TIMES
        COMMENT This method is actually the same as that in the sys folder.
        `VAR` = \randn(SIZE, BEAM, TIMES)
        CPP `VAR`.each_slice([](cx_mat& X){return normalise(X,2,0);});
  - id: RIS
    size: [8, 8]
    grid: same
    beamforming:
      variable: "Psi" # RIS reflection pattern
      scheme: custom # This can be omitted if the formula is specified.
      formula: |
        # Available temporary variables will include SIZE, GRID, etc.
        # And the size of Psi (type 'm', i.e. 'c2') is SIZE * TIMES
        # where `TIMES` is the macro (of scope 1 and 2) for the number of phase shift in one sounding.
        Psi = \randn(SIZE, TIMES)
        Psi = Psi / \abs(Psi)
        # Test Macro Here:
        # CAS_CH: `CAS_CH`
        # BF[RIS]: `BF[RIS]`
channels:
  - id: G
    from: RIS
    to: BS
    sparsity: 5
  - id: R
    from: UE
    to: RIS
    sparsity: 3
sounding:
  variables:
    received: "y"
    noise: "noise"
    channel: "H"
estimation: |
  COMMENT Here starts estimation.
  # New Contents will be added after my patent corresponding to the TVT paper is accepted.
simulation:
  backend: cpp
  jobs:
  - name: "NMSE v.s. SNR (Pilot: 24)"
    test_num: 200
    SNR: [0:2:30]
    SNR_mode: dB # dB (default) | linear
    pilot: 24
    # pilot_mode: percent # num (default) | percent
    algorithms: # compare different languages
      - alg: OMP
        max_iter: 6
        label: OMP
      - alg: OMPL
        params: "6 1"
        label: OMPL-1
      - alg: OMPL
        params: "6 2"
        label: OMPL-2
      - alg: OMPL
        params: "6 4"
        label: OMPL-4
      - alg: OMPL
        params: "6 8"
        label: OMPL-8
      - alg: Oracle_LS
        label: Oracle LS
  report:
    name: Single_RIS_Simulation
